# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "uas" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  hardware = {
    asahi = {
      experimentalGPUInstallMode = "replace";
      peripheralFirmwareDirectory = ./firmware;
      useExperimentalGPUDriver = true;
      withRust = true;
      setupAsahiSound = true;
    };
    bluetooth = {
      enable = true;
      powerOnBoot = true;
      package = pkgs.bluez;
    };
    graphics = {
      enable = true;
      enable32Bit = false;
    };
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/20500965-093f-4ce7-b83f-79b73f3b2ee6";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  boot.initrd.luks.devices."nixos-root".device = "/dev/disk/by-uuid/93305040-d520-4794-8a1e-bcd1776f44be";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/FA5E-1D08";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/20500965-093f-4ce7-b83f-79b73f3b2ee6";
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/20500965-093f-4ce7-b83f-79b73f3b2ee6";
      fsType = "btrfs";
      options = [ "subvol=@nix" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
